name: dockercompose8971649998701877326
services:
  identity.api:
    build:
      context: E:\Example\Identity
      dockerfile: Identity.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Server=localhost,1433;Database=IdentityDb;User Id=SA;Password=,Nguyenqb242,;Trust Server Certificate=True;Connect Timeout=30;Encrypt=False;Application Intent=ReadWrite;Multi Subnet Failover=False
      ConnectionStrings__SqlConnection: Server=localhost,1433;Database=IdentityDb;User Id=SA;Password=,Nguyenqb242,;TrustServerCertificate=True;Connect Timeout=30;Encrypt=False
    image: identityapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8280
        published: "6200"
        protocol: tcp
      - mode: ingress
        target: 8281
        published: "6260"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  redisdb:
    container_name: redisdb
    environment:
      REDIS_DATABASES: "16"
      REDIS_PASSWORD: nguyenqb242
      REDIS_PORT: "6379"
    image: redis
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /var/lib/redis
        target: /root/redis
        bind:
          create_host_path: true
      - type: bind
        source: /etc/redis/redis.conf
        target: /usr/local/etc/redis/redis.conf
        bind:
          create_host_path: true
  sqlserverdb:
    container_name: sqlserverdb
    entrypoint:
      - /bin/bash
      - /usr/src/app/init.sh
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: ',Nguyenqb242,'
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    networks:
      db_net: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: sqlserver_data
        target: /var/opt/mssql
        volume: {}
      - type: bind
        source: E:\Example\Identity\Identity.Infrastructure\Database\CreateTables.sql
        target: /usr/src/app/CreateTables.sql
        bind:
          create_host_path: true
      - type: bind
        source: E:\Example\Identity\Identity.Infrastructure\Scripts\init.sh
        target: /usr/src/app/init.sh
        bind:
          create_host_path: true
networks:
  db_net:
    name: db_net
  default:
    name: dockercompose8971649998701877326_default
volumes:
  sqlserver_data:
    name: dockercompose8971649998701877326_sqlserver_data
name: dockercompose8971649998701877326
services:
  identity.api:
    build:
      context: E:\Example\Identity
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Identity.API
    container_name: Identity.API_1
    entrypoint:
      - tail
      - -f
      - /dev/null
    labels:
      com.microsoft.visual-studio.project-name: Identity.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/Identity.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
      - type: bind
        source: C:\Users\ASUS\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Professional\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Professional\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  redisdb:
    container_name: redisdb
    environment:
      REDIS_DATABASES: "16"
      REDIS_PASSWORD: nguyenqb242
      REDIS_PORT: "6379"
    image: redis
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /var/lib/redis
        target: /root/redis
        bind:
          create_host_path: true
      - type: bind
        source: /etc/redis/redis.conf
        target: /usr/local/etc/redis/redis.conf
        bind:
          create_host_path: true
  sqlcmd:
    container_name: sqlcmd
    depends_on:
      sqlserverdb:
        condition: service_started
        required: true
    entrypoint:
      - /bin/bash
      - -c
      - ' apt-get update && apt-get install -y curl apt-transport-https && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && curl https://packages.microsoft.com/config/ubuntu/$$(lsb_release -rs)/prod.list > /etc/apt/sources.list.d/mssql-release.list && apt-get update && ACCEPT_EULA=Y apt-get install -y mssql-tools && sqlcmd -S sqlserverdb -U sa -P reallyStrongPwd123 '
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
  sqlserverdb:
    container_name: sqlserverdb
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Developer
      SA_PASSWORD: nguyenqb242
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: sqlserver_data
        target: /var/opt/mssql
        volume: {}
networks:
  default:
    name: dockercompose8971649998701877326_default
volumes:
  sqlserver_data:
    name: dockercompose8971649998701877326_sqlserver_data